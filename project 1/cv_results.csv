mean_fit_time,std_fit_time,mean_score_time,std_score_time,param_poly__degree,param_regressor,param_selector,param_regressor__alpha,params,split0_test_score,split1_test_score,split2_test_score,split3_test_score,split4_test_score,mean_test_score,std_test_score,rank_test_score
1.500655508041382,0.21131632388447846,0.00454864501953125,0.0018070258066438412,5,Lasso(max_iter=5000),passthrough,0.004046923650308744,"OrderedDict({'poly__degree': 5, 'regressor': Lasso(max_iter=5000), 'regressor__alpha': 0.004046923650308744, 'selector': 'passthrough'})",-0.13636009203188476,-0.09702648403241194,-0.24193823317789218,-0.1002553456463752,-0.10456423117638844,-0.1360288772129905,0.054786599764769545,1
1.5686373233795166,0.19471961291366804,0.0052851676940917965,0.0006722352710004788,5,Lasso(max_iter=5000),passthrough,0.0035745335041814734,"OrderedDict({'poly__degree': 5, 'regressor': Lasso(max_iter=5000), 'regressor__alpha': 0.0035745335041814734, 'selector': 'passthrough'})",-0.14429633731601965,-0.094587017984309,-0.24928085920152285,-0.09762045765076886,-0.10205795673147787,-0.13756852577681966,0.05870122240693849,2
1.6735724449157714,0.1346569800210368,0.00544281005859375,0.0012438025068493015,5,Lasso(max_iter=5000),passthrough,0.0033962632589931404,"OrderedDict({'poly__degree': 5, 'regressor': Lasso(max_iter=5000), 'regressor__alpha': 0.0033962632589931404, 'selector': 'passthrough'})",-0.1506600792886852,-0.09374636102926584,-0.24667471648400122,-0.09741232637645965,-0.10086249173749649,-0.13787119498318168,0.05823285496879349,3
1.6400609970092774,0.13756238422116931,0.004660749435424804,0.0008513074571507218,5,Lasso(max_iter=5000),passthrough,0.003393647293902067,"OrderedDict({'poly__degree': 5, 'regressor': Lasso(max_iter=5000), 'regressor__alpha': 0.003393647293902067, 'selector': 'passthrough'})",-0.15075695075897383,-0.09373513592872271,-0.2466303708726382,-0.09742619584526531,-0.10084693586779532,-0.13787911785467907,0.05822230870615773,4
1.8547607898712157,0.10135473661361431,0.004954671859741211,0.0008666423537385857,5,Lasso(max_iter=5000),passthrough,0.003266410938645983,"OrderedDict({'poly__degree': 5, 'regressor': Lasso(max_iter=5000), 'regressor__alpha': 0.003266410938645983, 'selector': 'passthrough'})",-0.15536890579330123,-0.09321136735312592,-0.2435727572368669,-0.0982412202275234,-0.10006690331003043,-0.13809223078416957,0.05739851119032056,5
1.7552515506744384,0.025315659996167812,0.00490570068359375,0.0010406943940589628,5,Lasso(max_iter=5000),passthrough,0.0027547819623803785,"OrderedDict({'poly__degree': 5, 'regressor': Lasso(max_iter=5000), 'regressor__alpha': 0.0027547819623803785, 'selector': 'passthrough'})",-0.1902033757766849,-0.09130118718362103,-0.23407730368320412,-0.10022241007717117,-0.09691028676837206,-0.14254291269781066,0.05856473409640104,6
2.1211071014404297,0.10261173001270892,0.006192636489868164,0.0026448458068036584,5,Lasso(max_iter=5000),passthrough,0.001002603929589632,"OrderedDict({'poly__degree': 5, 'regressor': Lasso(max_iter=5000), 'regressor__alpha': 0.001002603929589632, 'selector': 'passthrough'})",-0.4900116838241362,-0.08478845529351763,-0.2926071326776582,-0.1122728007227894,-0.08791641655239939,-0.2135192978141002,0.1583044483995879,7
1.9432959079742431,0.09990179632369107,0.005469417572021485,0.0008501292261275035,5,Lasso(max_iter=5000),passthrough,0.001,"OrderedDict({'poly__degree': 5, 'regressor': Lasso(max_iter=5000), 'regressor__alpha': 0.001, 'selector': 'passthrough'})",-0.49084560204161115,-0.0847669874807966,-0.2929331955195304,-0.11228599988903097,-0.0879059190653679,-0.21374754079926742,0.1586318030135059,8
5.39386510848999,0.27893010632708926,0.007372570037841797,0.0029619517677335607,6,Lasso(max_iter=5000),passthrough,0.001,"OrderedDict({'poly__degree': 6, 'regressor': Lasso(max_iter=5000), 'regressor__alpha': 0.001, 'selector': 'passthrough'})",-0.2583527255989859,-0.055003388572884,-0.7876108361130375,-0.06596512719787788,-0.05210610060829649,-0.24380763561821633,0.28282784889034956,9
5.740341138839722,0.604194201550851,0.008559131622314453,0.002741956174712526,6,Lasso(max_iter=5000),passthrough,0.0010109484468376801,"OrderedDict({'poly__degree': 6, 'regressor': Lasso(max_iter=5000), 'regressor__alpha': 0.0010109484468376801, 'selector': 'passthrough'})",-0.25912191200542123,-0.05536106535097016,-0.7911864145156745,-0.06585045806726436,-0.05239919471632388,-0.2447838089311308,0.28413776525225726,10
0.009722137451171875,0.002230880015600901,0.001381826400756836,6.015587545476077e-05,3,Lasso(max_iter=5000),passthrough,0.012414792399886583,"OrderedDict({'poly__degree': 3, 'regressor': Lasso(max_iter=5000), 'regressor__alpha': 0.012414792399886583, 'selector': 'passthrough'})",-0.6268422562661308,-0.38078847965707424,-0.4594648464336218,-0.3269042333060604,-0.28503858907035023,-0.41580768094664744,0.1205589174886084,11
0.00944986343383789,0.0012149250999741506,0.002170276641845703,0.000454124033255621,4,Ridge(),passthrough,329.5427226086402,"OrderedDict({'poly__degree': 4, 'regressor': Ridge(), 'regressor__alpha': 329.5427226086402, 'selector': 'passthrough'})",-0.5051111173143198,-0.41992226013777645,-0.6102583069369221,-0.35091283624362757,-0.28554971834520254,-0.4343508477955697,0.11424737367937898,12
0.004552125930786133,0.0005558401189532309,0.0015386581420898438,0.00015311497312224748,3,Ridge(),passthrough,8.287468701009008,"OrderedDict({'poly__degree': 3, 'regressor': Ridge(), 'regressor__alpha': 8.287468701009008, 'selector': 'passthrough'})",-0.7259083942493281,-0.36847851782622976,-0.47732265026155635,-0.3718992635910073,-0.2824307127335831,-0.4452079077323409,0.15335063848022246,13
0.10313210487365723,0.02027535398508194,0.002492666244506836,0.0002259170720685075,3,Lasso(max_iter=5000),passthrough,0.001,"OrderedDict({'poly__degree': 3, 'regressor': Lasso(max_iter=5000), 'regressor__alpha': 0.001, 'selector': 'passthrough'})",-0.7642260964919972,-0.3600731202291842,-0.4821379684437054,-0.3782980873063707,-0.29837127554183546,-0.45662130960261854,0.16478528945149656,14
0.012204742431640625,0.005105711894597031,0.0013171672821044923,0.0006118358802474204,2,Lasso(max_iter=5000),passthrough,0.0017056383854788342,"OrderedDict({'poly__degree': 2, 'regressor': Lasso(max_iter=5000), 'regressor__alpha': 0.0017056383854788342, 'selector': 'passthrough'})",-0.5288466636266309,-0.43885840828257644,-0.6211098400914794,-0.3977157034549466,-0.31517998564426153,-0.46034212021997895,0.10582513452866536,15
0.002820253372192383,0.0003490955089255101,0.001028156280517578,0.00013866352411683242,2,Ridge(),passthrough,7.531683894496764,"OrderedDict({'poly__degree': 2, 'regressor': Ridge(), 'regressor__alpha': 7.531683894496764, 'selector': 'passthrough'})",-0.527615642932203,-0.4468045345508325,-0.6257113558013231,-0.4023398898234829,-0.3102661829317905,-0.4625475212079264,0.10762778811898718,16
0.31081376075744627,0.016887421082332644,0.0035892009735107424,0.001033784634951257,2,Lasso(max_iter=5000),"EstimatorWrapper(estimator=Pipeline(steps=[('high_corr',
                                            DropHighlyCorrelated(threshold=0.95)),
                                           ('corr_filter',
                                            DropLowTargetCorrelation(threshold=0.01)),
                                           ('rfe',
                                            RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
                                                  estimator=LinearRegression(),
                                                  scoring='neg_mean_squared_error'))]))",0.001,"OrderedDict({'poly__degree': 2, 'regressor': Lasso(max_iter=5000), 'regressor__alpha': 0.001, 'selector': EstimatorWrapper(estimator=Pipeline(steps=[('high_corr',
                                            DropHighlyCorrelated(threshold=0.95)),
                                           ('corr_filter',
                                            DropLowTargetCorrelation(threshold=0.01)),
                                           ('rfe',
                                            RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
                                                  estimator=LinearRegression(),
                                                  scoring='neg_mean_squared_error'))]))})",-0.5417064643234147,-0.43192079816436196,-0.6335561425314087,-0.40029252366461887,-0.3087133192932875,-0.46323784959541825,0.11312501636501514,17
0.002857351303100586,0.0003270412113551221,0.0008965969085693359,3.6538174253586666e-05,2,LinearRegression(),passthrough,,"OrderedDict({'poly__degree': 2, 'regressor': LinearRegression(), 'selector': 'passthrough'})",-0.5455710080864293,-0.4251008161200135,-0.6254711775501492,-0.40294342095402547,-0.3591026855374744,-0.4716378216496183,0.09867075339196268,18
0.0025771141052246095,0.00018825826913117772,0.0012631893157958984,0.00037382407420676647,2,LinearRegression(),passthrough,,"OrderedDict({'poly__degree': 2, 'regressor': LinearRegression(), 'selector': 'passthrough'})",-0.5455710080864293,-0.4251008161200135,-0.6254711775501492,-0.40294342095402547,-0.3591026855374744,-0.4716378216496183,0.09867075339196268,18
0.0035376548767089844,0.0007054112220778681,0.0014082431793212891,0.00040038121444267293,2,LinearRegression(),passthrough,,"OrderedDict({'poly__degree': 2, 'regressor': LinearRegression(), 'selector': 'passthrough'})",-0.5455710080864293,-0.4251008161200135,-0.6254711775501492,-0.40294342095402547,-0.3591026855374744,-0.4716378216496183,0.09867075339196268,18
0.9255919933319092,0.08909109448335177,0.005176067352294922,0.0032446200320301517,3,Ridge(),"EstimatorWrapper(estimator=Pipeline(steps=[('high_corr',
                                            DropHighlyCorrelated(threshold=0.95)),
                                           ('corr_filter',
                                            DropLowTargetCorrelation(threshold=0.01)),
                                           ('rfe',
                                            RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
                                                  estimator=LinearRegression(),
                                                  scoring='neg_mean_squared_error'))]))",39.14841150089035,"OrderedDict({'poly__degree': 3, 'regressor': Ridge(), 'regressor__alpha': 39.14841150089035, 'selector': EstimatorWrapper(estimator=Pipeline(steps=[('high_corr',
                                            DropHighlyCorrelated(threshold=0.95)),
                                           ('corr_filter',
                                            DropLowTargetCorrelation(threshold=0.01)),
                                           ('rfe',
                                            RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
                                                  estimator=LinearRegression(),
                                                  scoring='neg_mean_squared_error'))]))})",-0.6341370254895158,-0.41724162361944966,-0.5816428609413334,-0.45634556149995725,-0.27730353954534065,-0.47333412221911936,0.12605659484665538,21
0.24339327812194825,0.03057865826450623,0.004293107986450195,0.0018567868336274382,2,LinearRegression(),"EstimatorWrapper(estimator=Pipeline(steps=[('high_corr',
                                            DropHighlyCorrelated(threshold=0.95)),
                                           ('corr_filter',
                                            DropLowTargetCorrelation(threshold=0.01)),
                                           ('rfe',
                                            RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
                                                  estimator=LinearRegression(),
                                                  scoring='neg_mean_squared_error'))]))",,"OrderedDict({'poly__degree': 2, 'regressor': LinearRegression(), 'selector': EstimatorWrapper(estimator=Pipeline(steps=[('high_corr',
                                            DropHighlyCorrelated(threshold=0.95)),
                                           ('corr_filter',
                                            DropLowTargetCorrelation(threshold=0.01)),
                                           ('rfe',
                                            RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
                                                  estimator=LinearRegression(),
                                                  scoring='neg_mean_squared_error'))]))})",-0.5539679057662965,-0.43431609181186354,-0.6317542088351746,-0.42292934023977213,-0.3253182271064314,-0.4736571547519076,0.10730327403368696,22
0.25612635612487794,0.012471679968806815,0.0016437053680419921,0.00022047139294714758,2,LinearRegression(),"RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
      estimator=LinearRegression(), scoring='neg_mean_squared_error')",,"OrderedDict({'poly__degree': 2, 'regressor': LinearRegression(), 'selector': RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
      estimator=LinearRegression(), scoring='neg_mean_squared_error')})",-0.5644766342216329,-0.42509563069329853,-0.6237568164233482,-0.40293815627107954,-0.35937639146033157,-0.47512872581393817,0.1011797903749669,23
0.3225571632385254,0.007061078262421851,0.0019861698150634766,0.0005258366078242131,2,LinearRegression(),"RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
      estimator=LinearRegression(), scoring='neg_mean_squared_error')",,"OrderedDict({'poly__degree': 2, 'regressor': LinearRegression(), 'selector': RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
      estimator=LinearRegression(), scoring='neg_mean_squared_error')})",-0.5644766342216329,-0.42509563069329853,-0.6237568164233482,-0.40293815627107954,-0.35937639146033157,-0.47512872581393817,0.1011797903749669,23
0.2814824104309082,0.009438611109149658,0.0015481472015380859,0.0003200567663571617,2,LinearRegression(),"RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
      estimator=LinearRegression(), scoring='neg_mean_squared_error')",,"OrderedDict({'poly__degree': 2, 'regressor': LinearRegression(), 'selector': RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
      estimator=LinearRegression(), scoring='neg_mean_squared_error')})",-0.5644766342216329,-0.42509563069329853,-0.6237568164233482,-0.40293815627107954,-0.35937639146033157,-0.47512872581393817,0.1011797903749669,23
0.5004204750061035,0.020381572539754887,0.003171348571777344,0.00012537259514626203,3,LinearRegression(),"EstimatorWrapper(estimator=Pipeline(steps=[('high_corr',
                                            DropHighlyCorrelated(threshold=0.95)),
                                           ('corr_filter',
                                            DropLowTargetCorrelation(threshold=0.01)),
                                           ('rfe',
                                            RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
                                                  estimator=LinearRegression(),
                                                  scoring='neg_mean_squared_error'))]))",,"OrderedDict({'poly__degree': 3, 'regressor': LinearRegression(), 'selector': EstimatorWrapper(estimator=Pipeline(steps=[('high_corr',
                                            DropHighlyCorrelated(threshold=0.95)),
                                           ('corr_filter',
                                            DropLowTargetCorrelation(threshold=0.01)),
                                           ('rfe',
                                            RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
                                                  estimator=LinearRegression(),
                                                  scoring='neg_mean_squared_error'))]))})",-0.8420380404074691,-0.4193763004287269,-0.4878439921674591,-0.33915488657376736,-0.29786296639490145,-0.4772552371944648,0.19379467497180167,26
0.5341677188873291,0.02111783191440464,0.0037723541259765624,0.0019509592111187878,3,LinearRegression(),"EstimatorWrapper(estimator=Pipeline(steps=[('high_corr',
                                            DropHighlyCorrelated(threshold=0.95)),
                                           ('corr_filter',
                                            DropLowTargetCorrelation(threshold=0.01)),
                                           ('rfe',
                                            RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
                                                  estimator=LinearRegression(),
                                                  scoring='neg_mean_squared_error'))]))",,"OrderedDict({'poly__degree': 3, 'regressor': LinearRegression(), 'selector': EstimatorWrapper(estimator=Pipeline(steps=[('high_corr',
                                            DropHighlyCorrelated(threshold=0.95)),
                                           ('corr_filter',
                                            DropLowTargetCorrelation(threshold=0.01)),
                                           ('rfe',
                                            RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
                                                  estimator=LinearRegression(),
                                                  scoring='neg_mean_squared_error'))]))})",-0.8420380404074691,-0.4193763004287269,-0.4878439921674591,-0.33915488657376736,-0.29786296639490145,-0.4772552371944648,0.19379467497180167,26
0.4863999843597412,0.016631987626142514,0.0032083988189697266,0.0005245103618262006,3,LinearRegression(),"EstimatorWrapper(estimator=Pipeline(steps=[('high_corr',
                                            DropHighlyCorrelated(threshold=0.95)),
                                           ('corr_filter',
                                            DropLowTargetCorrelation(threshold=0.01)),
                                           ('rfe',
                                            RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
                                                  estimator=LinearRegression(),
                                                  scoring='neg_mean_squared_error'))]))",,"OrderedDict({'poly__degree': 3, 'regressor': LinearRegression(), 'selector': EstimatorWrapper(estimator=Pipeline(steps=[('high_corr',
                                            DropHighlyCorrelated(threshold=0.95)),
                                           ('corr_filter',
                                            DropLowTargetCorrelation(threshold=0.01)),
                                           ('rfe',
                                            RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
                                                  estimator=LinearRegression(),
                                                  scoring='neg_mean_squared_error'))]))})",-0.8420380404074691,-0.4193763004287269,-0.4878439921674591,-0.33915488657376736,-0.29786296639490145,-0.4772552371944648,0.19379467497180167,26
0.4871214389801025,0.020143681498376847,0.0034918785095214844,0.0005826575264059658,3,LinearRegression(),"EstimatorWrapper(estimator=Pipeline(steps=[('high_corr',
                                            DropHighlyCorrelated(threshold=0.95)),
                                           ('corr_filter',
                                            DropLowTargetCorrelation(threshold=0.01)),
                                           ('rfe',
                                            RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
                                                  estimator=LinearRegression(),
                                                  scoring='neg_mean_squared_error'))]))",,"OrderedDict({'poly__degree': 3, 'regressor': LinearRegression(), 'selector': EstimatorWrapper(estimator=Pipeline(steps=[('high_corr',
                                            DropHighlyCorrelated(threshold=0.95)),
                                           ('corr_filter',
                                            DropLowTargetCorrelation(threshold=0.01)),
                                           ('rfe',
                                            RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
                                                  estimator=LinearRegression(),
                                                  scoring='neg_mean_squared_error'))]))})",-0.8420380404074691,-0.4193763004287269,-0.4878439921674591,-0.33915488657376736,-0.29786296639490145,-0.4772552371944648,0.19379467497180167,26
0.016357040405273436,0.0011810919095005755,0.0017890453338623047,0.00019211534175350077,4,LinearRegression(),passthrough,,"OrderedDict({'poly__degree': 4, 'regressor': LinearRegression(), 'selector': 'passthrough'})",-0.7471978217803414,-0.1799117373772908,-0.7375091965099345,-0.6547562375215313,-0.13328597135845222,-0.49053219290951,0.2749379393199074,30
0.01681365966796875,0.0017868193433663033,0.0033487319946289063,0.0020522806367972365,4,LinearRegression(),passthrough,,"OrderedDict({'poly__degree': 4, 'regressor': LinearRegression(), 'selector': 'passthrough'})",-0.7471978217803414,-0.1799117373772908,-0.7375091965099345,-0.6547562375215313,-0.13328597135845222,-0.49053219290951,0.2749379393199074,30
0.015659475326538087,0.0003746195986738217,0.001920938491821289,0.00035850782219961247,4,LinearRegression(),passthrough,,"OrderedDict({'poly__degree': 4, 'regressor': LinearRegression(), 'selector': 'passthrough'})",-0.7471978217803414,-0.1799117373772908,-0.7375091965099345,-0.6547562375215313,-0.13328597135845222,-0.49053219290951,0.2749379393199074,30
0.016481828689575196,0.0007202280526243045,0.0017861366271972657,0.00010494757968095638,4,LinearRegression(),passthrough,,"OrderedDict({'poly__degree': 4, 'regressor': LinearRegression(), 'selector': 'passthrough'})",-0.7471978217803414,-0.1799117373772908,-0.7375091965099345,-0.6547562375215313,-0.13328597135845222,-0.49053219290951,0.2749379393199074,30
9.190311622619628,0.2323782069908544,0.002163982391357422,0.00044117989695390973,4,LinearRegression(),"RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
      estimator=LinearRegression(), scoring='neg_mean_squared_error')",,"OrderedDict({'poly__degree': 4, 'regressor': LinearRegression(), 'selector': RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
      estimator=LinearRegression(), scoring='neg_mean_squared_error')})",-0.5489847570616978,-0.26912966287432283,-0.6172014979191492,-0.7289451933776842,-0.42902190410996993,-0.5186566030685648,0.15820888570496874,34
8.878828620910644,0.11492677142355645,0.0032013416290283202,0.0013400516369803663,4,LinearRegression(),"RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
      estimator=LinearRegression(), scoring='neg_mean_squared_error')",,"OrderedDict({'poly__degree': 4, 'regressor': LinearRegression(), 'selector': RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
      estimator=LinearRegression(), scoring='neg_mean_squared_error')})",-0.5489847570616978,-0.26912966287432283,-0.6172014979191492,-0.7289451933776842,-0.42902190410996993,-0.5186566030685648,0.15820888570496874,34
13.762555694580078,1.4671374461026767,0.0025393486022949217,0.0003560265101986821,4,LinearRegression(),"RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
      estimator=LinearRegression(), scoring='neg_mean_squared_error')",,"OrderedDict({'poly__degree': 4, 'regressor': LinearRegression(), 'selector': RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
      estimator=LinearRegression(), scoring='neg_mean_squared_error')})",-0.5489847570616978,-0.26912966287432283,-0.6172014979191492,-0.7289451933776842,-0.42902190410996993,-0.5186566030685648,0.15820888570496874,34
1.6763989448547363,0.015288064378649217,0.0019921302795410157,0.0006777544133462495,3,LinearRegression(),"RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
      estimator=LinearRegression(), scoring='neg_mean_squared_error')",,"OrderedDict({'poly__degree': 3, 'regressor': LinearRegression(), 'selector': RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
      estimator=LinearRegression(), scoring='neg_mean_squared_error')})",-1.017945750877876,-0.4248160304042257,-0.46012253212853116,-0.4923657744308138,-0.36042524350603805,-0.5511350662694969,0.23747676165003004,37
1.471785593032837,0.042579265584398174,0.002164125442504883,0.0007810993789786696,3,LinearRegression(),"RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
      estimator=LinearRegression(), scoring='neg_mean_squared_error')",,"OrderedDict({'poly__degree': 3, 'regressor': LinearRegression(), 'selector': RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
      estimator=LinearRegression(), scoring='neg_mean_squared_error')})",-1.017945750877876,-0.4248160304042257,-0.46012253212853116,-0.4923657744308138,-0.36042524350603805,-0.5511350662694969,0.23747676165003004,37
1.428838586807251,0.020008157368601332,0.0016547679901123048,0.00013804625969401132,3,LinearRegression(),"RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
      estimator=LinearRegression(), scoring='neg_mean_squared_error')",,"OrderedDict({'poly__degree': 3, 'regressor': LinearRegression(), 'selector': RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
      estimator=LinearRegression(), scoring='neg_mean_squared_error')})",-1.017945750877876,-0.4248160304042257,-0.46012253212853116,-0.4923657744308138,-0.36042524350603805,-0.5511350662694969,0.23747676165003004,37
0.08154635429382324,0.028482896775730987,0.03496232032775879,0.058692458846632545,6,Ridge(),passthrough,4.596987529494217,"OrderedDict({'poly__degree': 6, 'regressor': Ridge(), 'regressor__alpha': 4.596987529494217, 'selector': 'passthrough'})",-0.6249483008671278,-0.08268119329213316,-1.9269689160939216,-0.08361397306796775,-0.09263350955299873,-0.5621691785748297,0.7135835058295457,40
0.0038172721862792967,0.00036276470450826825,0.0014672279357910156,0.0003815136228577707,3,Ridge(),passthrough,1000.0,"OrderedDict({'poly__degree': 3, 'regressor': Ridge(), 'regressor__alpha': 1000.0, 'selector': 'passthrough'})",-0.677693814856565,-0.6059899524043795,-0.5589349503692891,-0.5800950146278678,-0.4004120613164507,-0.5646251587149104,0.09135995121368261,41
0.008554029464721679,0.002169428909073749,0.0018307685852050782,0.0002775067067681641,3,LinearRegression(),passthrough,,"OrderedDict({'poly__degree': 3, 'regressor': LinearRegression(), 'selector': 'passthrough'})",-1.0275510356970763,-0.42455708886080235,-0.5672285042112678,-0.48097982063554706,-0.383188833584151,-0.5767010565977689,0.23371467873931906,42
0.005681371688842774,0.0008720478412510602,0.001465606689453125,0.00017690359097642517,3,LinearRegression(),passthrough,,"OrderedDict({'poly__degree': 3, 'regressor': LinearRegression(), 'selector': 'passthrough'})",-1.0275510356970763,-0.42455708886080235,-0.5672285042112678,-0.48097982063554706,-0.383188833584151,-0.5767010565977689,0.23371467873931906,42
0.00493917465209961,0.0006318151473722353,0.001130056381225586,6.654849807291006e-05,3,LinearRegression(),passthrough,,"OrderedDict({'poly__degree': 3, 'regressor': LinearRegression(), 'selector': 'passthrough'})",-1.0275510356970763,-0.42455708886080235,-0.5672285042112678,-0.48097982063554706,-0.383188833584151,-0.5767010565977689,0.23371467873931906,42
0.004896736145019532,0.0003245729555801136,0.0012013912200927734,3.357285784539633e-05,3,LinearRegression(),passthrough,,"OrderedDict({'poly__degree': 3, 'regressor': LinearRegression(), 'selector': 'passthrough'})",-1.0275510356970763,-0.42455708886080235,-0.5672285042112678,-0.48097982063554706,-0.383188833584151,-0.5767010565977689,0.23371467873931906,42
0.005810260772705078,0.0003198665099424289,0.001336669921875,7.381195857844437e-05,3,LinearRegression(),passthrough,,"OrderedDict({'poly__degree': 3, 'regressor': LinearRegression(), 'selector': 'passthrough'})",-1.0275510356970763,-0.42455708886080235,-0.5672285042112678,-0.48097982063554706,-0.383188833584151,-0.5767010565977689,0.23371467873931906,42
5.07402081489563,0.19809696077027783,0.004675531387329101,0.0014694314910020361,6,Lasso(max_iter=5000),"EstimatorWrapper(estimator=Pipeline(steps=[('high_corr',
                                            DropHighlyCorrelated(threshold=0.95)),
                                           ('corr_filter',
                                            DropLowTargetCorrelation(threshold=0.01)),
                                           ('rfe',
                                            RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
                                                  estimator=LinearRegression(),
                                                  scoring='neg_mean_squared_error'))]))",0.004149411056628574,"OrderedDict({'poly__degree': 6, 'regressor': Lasso(max_iter=5000), 'regressor__alpha': 0.004149411056628574, 'selector': EstimatorWrapper(estimator=Pipeline(steps=[('high_corr',
                                            DropHighlyCorrelated(threshold=0.95)),
                                           ('corr_filter',
                                            DropLowTargetCorrelation(threshold=0.01)),
                                           ('rfe',
                                            RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
                                                  estimator=LinearRegression(),
                                                  scoring='neg_mean_squared_error'))]))})",-0.8423973965635189,-0.4452568833473533,-0.8401194882271086,-0.4545504881189806,-0.6224763243133741,-0.6409601161140671,0.1752891261540615,47
4.7399742126464846,0.178005278802009,0.006716012954711914,0.004329731490353749,6,Ridge(),"EstimatorWrapper(estimator=Pipeline(steps=[('high_corr',
                                            DropHighlyCorrelated(threshold=0.95)),
                                           ('corr_filter',
                                            DropLowTargetCorrelation(threshold=0.01)),
                                           ('rfe',
                                            RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
                                                  estimator=LinearRegression(),
                                                  scoring='neg_mean_squared_error'))]))",1.394714582574918,"OrderedDict({'poly__degree': 6, 'regressor': Ridge(), 'regressor__alpha': 1.394714582574918, 'selector': EstimatorWrapper(estimator=Pipeline(steps=[('high_corr',
                                            DropHighlyCorrelated(threshold=0.95)),
                                           ('corr_filter',
                                            DropLowTargetCorrelation(threshold=0.01)),
                                           ('rfe',
                                            RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
                                                  estimator=LinearRegression(),
                                                  scoring='neg_mean_squared_error'))]))})",-0.9858830129760098,-0.42439679699519733,-0.8498473478244157,-0.4476651196509783,-0.6087779876119779,-0.6633140530117158,0.22154254856234676,48
7.092288780212402,1.6575195898257664,0.020984792709350587,0.029935983510051296,6,Lasso(max_iter=5000),"EstimatorWrapper(estimator=Pipeline(steps=[('high_corr',
                                            DropHighlyCorrelated(threshold=0.95)),
                                           ('corr_filter',
                                            DropLowTargetCorrelation(threshold=0.01)),
                                           ('rfe',
                                            RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
                                                  estimator=LinearRegression(),
                                                  scoring='neg_mean_squared_error'))]))",0.0010005556808689864,"OrderedDict({'poly__degree': 6, 'regressor': Lasso(max_iter=5000), 'regressor__alpha': 0.0010005556808689864, 'selector': EstimatorWrapper(estimator=Pipeline(steps=[('high_corr',
                                            DropHighlyCorrelated(threshold=0.95)),
                                           ('corr_filter',
                                            DropLowTargetCorrelation(threshold=0.01)),
                                           ('rfe',
                                            RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
                                                  estimator=LinearRegression(),
                                                  scoring='neg_mean_squared_error'))]))})",-1.1040248671249702,-0.41917012838276896,-0.894970260900673,-0.4814020106693646,-0.5911076283905329,-0.698134979093662,0.2606684295049181,49
5.2049449443817135,0.057823648814441006,0.0054432392120361325,0.0019408259472122958,6,Lasso(max_iter=5000),"EstimatorWrapper(estimator=Pipeline(steps=[('high_corr',
                                            DropHighlyCorrelated(threshold=0.95)),
                                           ('corr_filter',
                                            DropLowTargetCorrelation(threshold=0.01)),
                                           ('rfe',
                                            RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
                                                  estimator=LinearRegression(),
                                                  scoring='neg_mean_squared_error'))]))",0.001,"OrderedDict({'poly__degree': 6, 'regressor': Lasso(max_iter=5000), 'regressor__alpha': 0.001, 'selector': EstimatorWrapper(estimator=Pipeline(steps=[('high_corr',
                                            DropHighlyCorrelated(threshold=0.95)),
                                           ('corr_filter',
                                            DropLowTargetCorrelation(threshold=0.01)),
                                           ('rfe',
                                            RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
                                                  estimator=LinearRegression(),
                                                  scoring='neg_mean_squared_error'))]))})",-1.1040927334234896,-0.4191620069493545,-0.8949907789638764,-0.4814348502242079,-0.5910988751475229,-0.6981558489416904,0.2606896601909408,50
1.0728157997131347,0.0966477956498785,0.0032775402069091797,0.0006786272825589159,4,LinearRegression(),"EstimatorWrapper(estimator=Pipeline(steps=[('high_corr',
                                            DropHighlyCorrelated(threshold=0.95)),
                                           ('corr_filter',
                                            DropLowTargetCorrelation(threshold=0.01)),
                                           ('rfe',
                                            RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
                                                  estimator=LinearRegression(),
                                                  scoring='neg_mean_squared_error'))]))",,"OrderedDict({'poly__degree': 4, 'regressor': LinearRegression(), 'selector': EstimatorWrapper(estimator=Pipeline(steps=[('high_corr',
                                            DropHighlyCorrelated(threshold=0.95)),
                                           ('corr_filter',
                                            DropLowTargetCorrelation(threshold=0.01)),
                                           ('rfe',
                                            RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
                                                  estimator=LinearRegression(),
                                                  scoring='neg_mean_squared_error'))]))})",-1.1642489601988562,-0.4931802333018197,-1.1552316945048102,-0.48181554224397477,-0.49843106730444575,-0.7585814995107814,0.32760126386636146,51
1.2750460147857665,0.08330139235272596,0.00368647575378418,0.0004833086605795737,4,LinearRegression(),"EstimatorWrapper(estimator=Pipeline(steps=[('high_corr',
                                            DropHighlyCorrelated(threshold=0.95)),
                                           ('corr_filter',
                                            DropLowTargetCorrelation(threshold=0.01)),
                                           ('rfe',
                                            RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
                                                  estimator=LinearRegression(),
                                                  scoring='neg_mean_squared_error'))]))",,"OrderedDict({'poly__degree': 4, 'regressor': LinearRegression(), 'selector': EstimatorWrapper(estimator=Pipeline(steps=[('high_corr',
                                            DropHighlyCorrelated(threshold=0.95)),
                                           ('corr_filter',
                                            DropLowTargetCorrelation(threshold=0.01)),
                                           ('rfe',
                                            RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
                                                  estimator=LinearRegression(),
                                                  scoring='neg_mean_squared_error'))]))})",-1.1642489601988562,-0.4931802333018197,-1.1552316945048102,-0.48181554224397477,-0.49843106730444575,-0.7585814995107814,0.32760126386636146,51
1.1220812320709228,0.07218068072862886,0.0034598350524902345,0.0008651709220152749,4,LinearRegression(),"EstimatorWrapper(estimator=Pipeline(steps=[('high_corr',
                                            DropHighlyCorrelated(threshold=0.95)),
                                           ('corr_filter',
                                            DropLowTargetCorrelation(threshold=0.01)),
                                           ('rfe',
                                            RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
                                                  estimator=LinearRegression(),
                                                  scoring='neg_mean_squared_error'))]))",,"OrderedDict({'poly__degree': 4, 'regressor': LinearRegression(), 'selector': EstimatorWrapper(estimator=Pipeline(steps=[('high_corr',
                                            DropHighlyCorrelated(threshold=0.95)),
                                           ('corr_filter',
                                            DropLowTargetCorrelation(threshold=0.01)),
                                           ('rfe',
                                            RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
                                                  estimator=LinearRegression(),
                                                  scoring='neg_mean_squared_error'))]))})",-1.1642489601988562,-0.4931802333018197,-1.1552316945048102,-0.48181554224397477,-0.49843106730444575,-0.7585814995107814,0.32760126386636146,51
1.1462437629699707,0.04988971886649142,0.0032996177673339845,0.0007281749564281009,4,LinearRegression(),"EstimatorWrapper(estimator=Pipeline(steps=[('high_corr',
                                            DropHighlyCorrelated(threshold=0.95)),
                                           ('corr_filter',
                                            DropLowTargetCorrelation(threshold=0.01)),
                                           ('rfe',
                                            RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
                                                  estimator=LinearRegression(),
                                                  scoring='neg_mean_squared_error'))]))",,"OrderedDict({'poly__degree': 4, 'regressor': LinearRegression(), 'selector': EstimatorWrapper(estimator=Pipeline(steps=[('high_corr',
                                            DropHighlyCorrelated(threshold=0.95)),
                                           ('corr_filter',
                                            DropLowTargetCorrelation(threshold=0.01)),
                                           ('rfe',
                                            RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
                                                  estimator=LinearRegression(),
                                                  scoring='neg_mean_squared_error'))]))})",-1.1642489601988562,-0.4931802333018197,-1.1552316945048102,-0.48181554224397477,-0.49843106730444575,-0.7585814995107814,0.32760126386636146,51
4.640980243682861,0.17935167321933818,0.004233694076538086,0.0007311478134472032,6,Ridge(),"EstimatorWrapper(estimator=Pipeline(steps=[('high_corr',
                                            DropHighlyCorrelated(threshold=0.95)),
                                           ('corr_filter',
                                            DropLowTargetCorrelation(threshold=0.01)),
                                           ('rfe',
                                            RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
                                                  estimator=LinearRegression(),
                                                  scoring='neg_mean_squared_error'))]))",0.001,"OrderedDict({'poly__degree': 6, 'regressor': Ridge(), 'regressor__alpha': 0.001, 'selector': EstimatorWrapper(estimator=Pipeline(steps=[('high_corr',
                                            DropHighlyCorrelated(threshold=0.95)),
                                           ('corr_filter',
                                            DropLowTargetCorrelation(threshold=0.01)),
                                           ('rfe',
                                            RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
                                                  estimator=LinearRegression(),
                                                  scoring='neg_mean_squared_error'))]))})",-1.6702153494499195,-0.4250571493087316,-1.0009582205645955,-0.48879849521294544,-0.5892823748516558,-0.8348623178775696,0.46333842711481005,55
4.802447414398193,0.13204277018007216,0.0055542469024658205,0.0014548550693978038,6,LinearRegression(),"EstimatorWrapper(estimator=Pipeline(steps=[('high_corr',
                                            DropHighlyCorrelated(threshold=0.95)),
                                           ('corr_filter',
                                            DropLowTargetCorrelation(threshold=0.01)),
                                           ('rfe',
                                            RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
                                                  estimator=LinearRegression(),
                                                  scoring='neg_mean_squared_error'))]))",,"OrderedDict({'poly__degree': 6, 'regressor': LinearRegression(), 'selector': EstimatorWrapper(estimator=Pipeline(steps=[('high_corr',
                                            DropHighlyCorrelated(threshold=0.95)),
                                           ('corr_filter',
                                            DropLowTargetCorrelation(threshold=0.01)),
                                           ('rfe',
                                            RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
                                                  estimator=LinearRegression(),
                                                  scoring='neg_mean_squared_error'))]))})",-1.8152068122941618,-0.4422492649414098,-1.0155022512521008,-0.48856680045302525,-0.5893654126206234,-0.8701781083122644,0.514160366657576,56
2.6926126956939695,0.18096143830232403,0.004194450378417969,0.000841113882652208,5,Lasso(max_iter=5000),"EstimatorWrapper(estimator=Pipeline(steps=[('high_corr',
                                            DropHighlyCorrelated(threshold=0.95)),
                                           ('corr_filter',
                                            DropLowTargetCorrelation(threshold=0.01)),
                                           ('rfe',
                                            RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
                                                  estimator=LinearRegression(),
                                                  scoring='neg_mean_squared_error'))]))",0.001,"OrderedDict({'poly__degree': 5, 'regressor': Lasso(max_iter=5000), 'regressor__alpha': 0.001, 'selector': EstimatorWrapper(estimator=Pipeline(steps=[('high_corr',
                                            DropHighlyCorrelated(threshold=0.95)),
                                           ('corr_filter',
                                            DropLowTargetCorrelation(threshold=0.01)),
                                           ('rfe',
                                            RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
                                                  estimator=LinearRegression(),
                                                  scoring='neg_mean_squared_error'))]))})",-0.8948277883908422,-0.4191620069493545,-1.8499147528243303,-0.46881028627093385,-0.762693342202572,-0.8790816353276065,0.516944825405116,57
2.0941433906555176,0.15515566998387378,0.0033916473388671876,0.0005925177568478264,5,Ridge(),"EstimatorWrapper(estimator=Pipeline(steps=[('high_corr',
                                            DropHighlyCorrelated(threshold=0.95)),
                                           ('corr_filter',
                                            DropLowTargetCorrelation(threshold=0.01)),
                                           ('rfe',
                                            RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
                                                  estimator=LinearRegression(),
                                                  scoring='neg_mean_squared_error'))]))",0.4684868309108596,"OrderedDict({'poly__degree': 5, 'regressor': Ridge(), 'regressor__alpha': 0.4684868309108596, 'selector': EstimatorWrapper(estimator=Pipeline(steps=[('high_corr',
                                            DropHighlyCorrelated(threshold=0.95)),
                                           ('corr_filter',
                                            DropLowTargetCorrelation(threshold=0.01)),
                                           ('rfe',
                                            RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
                                                  estimator=LinearRegression(),
                                                  scoring='neg_mean_squared_error'))]))})",-0.8920979084911077,-0.4161088095155585,-2.242819782310323,-0.46238976283882677,-0.7643668014366272,-0.9555566129184887,0.6681084482430265,58
2.207340383529663,0.16776507670199362,0.0034081459045410155,0.0006045204020518468,5,Ridge(),"EstimatorWrapper(estimator=Pipeline(steps=[('high_corr',
                                            DropHighlyCorrelated(threshold=0.95)),
                                           ('corr_filter',
                                            DropLowTargetCorrelation(threshold=0.01)),
                                           ('rfe',
                                            RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
                                                  estimator=LinearRegression(),
                                                  scoring='neg_mean_squared_error'))]))",0.2560018618237001,"OrderedDict({'poly__degree': 5, 'regressor': Ridge(), 'regressor__alpha': 0.2560018618237001, 'selector': EstimatorWrapper(estimator=Pipeline(steps=[('high_corr',
                                            DropHighlyCorrelated(threshold=0.95)),
                                           ('corr_filter',
                                            DropLowTargetCorrelation(threshold=0.01)),
                                           ('rfe',
                                            RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
                                                  estimator=LinearRegression(),
                                                  scoring='neg_mean_squared_error'))]))})",-0.8991015565899546,-0.41399359095291965,-2.372476404946883,-0.45368355352376954,-0.7669760907296728,-0.9812462393486399,0.7194829773875047,59
0.0045989990234375,0.003675741560833865,0.0028791427612304688,0.0027051971239905387,1,Lasso(max_iter=5000),passthrough,0.009136613295994911,"OrderedDict({'poly__degree': 1, 'regressor': Lasso(max_iter=5000), 'regressor__alpha': 0.009136613295994911, 'selector': 'passthrough'})",-1.1905568582823958,-1.0260351491755775,-1.0955517295201223,-1.108504283133319,-0.8956763973030878,-1.0632648834829006,0.09875651307407732,60
0.012635469436645508,0.010258575592172994,0.002952861785888672,0.001921235253126789,1,Ridge(),passthrough,33.6423449414839,"OrderedDict({'poly__degree': 1, 'regressor': Ridge(), 'regressor__alpha': 33.6423449414839, 'selector': 'passthrough'})",-1.2033368884078763,-1.0240226795542406,-1.10189798522896,-1.1084134015977838,-0.8793792491593586,-1.063410040789644,0.1081710160151278,61
0.002319955825805664,0.0003315882055782798,0.0008391857147216797,4.201484691889397e-05,1,Ridge(),passthrough,4.054975073897406,"OrderedDict({'poly__degree': 1, 'regressor': Ridge(), 'regressor__alpha': 4.054975073897406, 'selector': 'passthrough'})",-1.1987161486545395,-1.0276749913642216,-1.0934700027925057,-1.1082107424344503,-0.8916320994932166,-1.0639407969477868,0.10198205074620373,62
0.002888345718383789,0.00027026643021796864,0.0009484767913818359,0.00018341635349627047,1,Lasso(max_iter=5000),passthrough,0.001,"OrderedDict({'poly__degree': 1, 'regressor': Lasso(max_iter=5000), 'regressor__alpha': 0.001, 'selector': 'passthrough'})",-1.2004672665237892,-1.0308970707978236,-1.0932439102971883,-1.1107298097405196,-0.8978189879867492,-1.066631409069214,0.10033893296960546,63
0.057741832733154294,0.0035568843094698345,0.0013380050659179688,5.221900303039162e-05,1,Ridge(),"RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
      estimator=LinearRegression(), scoring='neg_mean_squared_error')",7.044106051310168,"OrderedDict({'poly__degree': 1, 'regressor': Ridge(), 'regressor__alpha': 7.044106051310168, 'selector': RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
      estimator=LinearRegression(), scoring='neg_mean_squared_error')})",-1.1995760365446873,-1.0268317468801427,-1.0945551799376951,-1.1161386574043384,-0.8978131458830394,-1.0669829533299806,0.10098314688159385,64
0.0021683692932128905,0.00025271341015027925,0.0008331298828125,1.7132726579566804e-05,1,Ridge(),passthrough,0.034384183762700776,"OrderedDict({'poly__degree': 1, 'regressor': Ridge(), 'regressor__alpha': 0.034384183762700776, 'selector': 'passthrough'})",-1.2013457317926592,-1.0323751952620144,-1.0934686965830975,-1.1126722799195876,-0.9031211240281753,-1.0685966055171068,0.09887137305591788,65
0.0021860599517822266,0.000131421805351761,0.0009594917297363281,0.00010268935917314731,1,Ridge(),passthrough,0.001,"OrderedDict({'poly__degree': 1, 'regressor': Ridge(), 'regressor__alpha': 0.001, 'selector': 'passthrough'})",-1.201434953613683,-1.032526217131198,-1.0935620060523754,-1.1129407486588718,-0.9035347287006377,-1.0687997308313535,0.09877448129644618,66
0.00210113525390625,0.00037727955614768666,0.0007471084594726562,4.532527192180116e-05,1,LinearRegression(),passthrough,,"OrderedDict({'poly__degree': 1, 'regressor': LinearRegression(), 'selector': 'passthrough'})",-1.201437691295562,-1.03253086349368,-1.0935650083604682,-1.1129492563543757,-0.9035475797525355,-1.0688060798513244,0.09877148586883865,67
0.0019825458526611327,0.00031148102537096906,0.0007627964019775391,4.437163844262992e-05,1,LinearRegression(),passthrough,,"OrderedDict({'poly__degree': 1, 'regressor': LinearRegression(), 'selector': 'passthrough'})",-1.201437691295562,-1.03253086349368,-1.0935650083604682,-1.1129492563543757,-0.9035475797525355,-1.0688060798513244,0.09877148586883865,67
0.08744444847106933,0.004456373781096322,0.002091217041015625,0.0001851256876693558,1,Lasso(max_iter=5000),"RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
      estimator=LinearRegression(), scoring='neg_mean_squared_error')",0.001,"OrderedDict({'poly__degree': 1, 'regressor': Lasso(max_iter=5000), 'regressor__alpha': 0.001, 'selector': RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
      estimator=LinearRegression(), scoring='neg_mean_squared_error')})",-1.2016536335646144,-1.0308970707978233,-1.093244425346886,-1.1174314074588592,-0.9092149595626157,-1.0704882993461597,0.09747040276246477,69
0.04974966049194336,0.0030577711427963125,0.0012857437133789063,0.00021208864519093096,1,Ridge(),"RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
      estimator=LinearRegression(), scoring='neg_mean_squared_error')",0.13423368416692838,"OrderedDict({'poly__degree': 1, 'regressor': Ridge(), 'regressor__alpha': 0.13423368416692838, 'selector': RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
      estimator=LinearRegression(), scoring='neg_mean_squared_error')})",-1.2022038226915668,-1.03196595484296,-1.0933853925071244,-1.1172792388430712,-0.9101754304431278,-1.0710019678655702,0.09720649738529287,70
0.10207056999206543,0.004841306631500373,0.0048656463623046875,0.0007899362712684779,1,Ridge(),"EstimatorWrapper(estimator=Pipeline(steps=[('high_corr',
                                            DropHighlyCorrelated(threshold=0.95)),
                                           ('corr_filter',
                                            DropLowTargetCorrelation(threshold=0.01)),
                                           ('rfe',
                                            RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
                                                  estimator=LinearRegression(),
                                                  scoring='neg_mean_squared_error'))]))",0.10542193890310222,"OrderedDict({'poly__degree': 1, 'regressor': Ridge(), 'regressor__alpha': 0.10542193890310222, 'selector': EstimatorWrapper(estimator=Pipeline(steps=[('high_corr',
                                            DropHighlyCorrelated(threshold=0.95)),
                                           ('corr_filter',
                                            DropLowTargetCorrelation(threshold=0.01)),
                                           ('rfe',
                                            RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
                                                  estimator=LinearRegression(),
                                                  scoring='neg_mean_squared_error'))]))})",-1.202273111293685,-1.0320780485959946,-1.0933979598773864,-1.117305609694034,-0.9102424379657186,-1.0710594334853638,0.0971971215984662,71
0.05212182998657226,0.0035569783929767884,0.0012187957763671875,8.019913376217389e-05,1,LinearRegression(),"RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
      estimator=LinearRegression(), scoring='neg_mean_squared_error')",,"OrderedDict({'poly__degree': 1, 'regressor': LinearRegression(), 'selector': RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
      estimator=LinearRegression(), scoring='neg_mean_squared_error')})",-1.2025490408633044,-1.0325308634936803,-1.093456220118149,-1.1174122608985557,-0.9104889242207241,-1.0712874619188828,0.09716665752752222,72
0.050642538070678714,0.0014492869964970634,0.0012228012084960938,0.00011241059534639886,1,LinearRegression(),"RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
      estimator=LinearRegression(), scoring='neg_mean_squared_error')",,"OrderedDict({'poly__degree': 1, 'regressor': LinearRegression(), 'selector': RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
      estimator=LinearRegression(), scoring='neg_mean_squared_error')})",-1.2025490408633044,-1.0325308634936803,-1.093456220118149,-1.1174122608985557,-0.9104889242207241,-1.0712874619188828,0.09716665752752222,72
0.059180259704589844,0.003976013892806886,0.0023360252380371094,7.912623791767708e-05,1,LinearRegression(),"EstimatorWrapper(estimator=Pipeline(steps=[('high_corr',
                                            DropHighlyCorrelated(threshold=0.95)),
                                           ('corr_filter',
                                            DropLowTargetCorrelation(threshold=0.01)),
                                           ('rfe',
                                            RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
                                                  estimator=LinearRegression(),
                                                  scoring='neg_mean_squared_error'))]))",,"OrderedDict({'poly__degree': 1, 'regressor': LinearRegression(), 'selector': EstimatorWrapper(estimator=Pipeline(steps=[('high_corr',
                                            DropHighlyCorrelated(threshold=0.95)),
                                           ('corr_filter',
                                            DropLowTargetCorrelation(threshold=0.01)),
                                           ('rfe',
                                            RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
                                                  estimator=LinearRegression(),
                                                  scoring='neg_mean_squared_error'))]))})",-1.2025490408633044,-1.0325308634936803,-1.093456220118149,-1.1174122608985557,-0.9104889242207241,-1.0712874619188828,0.09716665752752222,72
492.1812963962555,3.8601668746595643,0.004562568664550781,0.0013806057737521286,6,Ridge(),"RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
      estimator=LinearRegression(), scoring='neg_mean_squared_error')",1.7262234716403766,"OrderedDict({'poly__degree': 6, 'regressor': Ridge(), 'regressor__alpha': 1.7262234716403766, 'selector': RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
      estimator=LinearRegression(), scoring='neg_mean_squared_error')})",-1.2872980394161229,-1.0438548181539165,-1.6482398457150733,-0.6520756021999594,-0.9344302590477398,-1.1131797129065624,0.33644638400356486,75
469.01334128379824,2.156657536271626,0.0045436382293701175,0.0018056577632487706,6,Lasso(max_iter=5000),"RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
      estimator=LinearRegression(), scoring='neg_mean_squared_error')",0.029422753767561323,"OrderedDict({'poly__degree': 6, 'regressor': Lasso(max_iter=5000), 'regressor__alpha': 0.029422753767561323, 'selector': RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
      estimator=LinearRegression(), scoring='neg_mean_squared_error')})",-1.535168330221574,-1.3633368719372299,-0.6678594149497253,-0.9483070772094576,-1.0735303253974386,-1.117640403943085,0.30581652546552757,76
451.1920163631439,3.0310743237461564,0.004662227630615234,0.0015906544266057923,6,Lasso(max_iter=5000),"RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
      estimator=LinearRegression(), scoring='neg_mean_squared_error')",0.001,"OrderedDict({'poly__degree': 6, 'regressor': Lasso(max_iter=5000), 'regressor__alpha': 0.001, 'selector': RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
      estimator=LinearRegression(), scoring='neg_mean_squared_error')})",-1.1619341661383753,-0.8582294320181472,-2.3866688663180313,-0.575841435671207,-0.8418894681631508,-1.1649126736617825,0.6384513436784935,77
2.7671284675598145,0.2001786448634333,0.003957605361938477,0.0008337174554681266,5,Ridge(),"EstimatorWrapper(estimator=Pipeline(steps=[('high_corr',
                                            DropHighlyCorrelated(threshold=0.95)),
                                           ('corr_filter',
                                            DropLowTargetCorrelation(threshold=0.01)),
                                           ('rfe',
                                            RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
                                                  estimator=LinearRegression(),
                                                  scoring='neg_mean_squared_error'))]))",1000.0,"OrderedDict({'poly__degree': 5, 'regressor': Ridge(), 'regressor__alpha': 1000.0, 'selector': EstimatorWrapper(estimator=Pipeline(steps=[('high_corr',
                                            DropHighlyCorrelated(threshold=0.95)),
                                           ('corr_filter',
                                            DropLowTargetCorrelation(threshold=0.01)),
                                           ('rfe',
                                            RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
                                                  estimator=LinearRegression(),
                                                  scoring='neg_mean_squared_error'))]))})",-1.8249942989967045,-0.9530436693004294,-0.681757130559123,-1.2148630403090286,-1.3360983312463783,-1.202151294082333,0.384422033754941,78
62.39579277038574,0.26273738123301354,0.00208897590637207,0.00035166080597975327,5,Ridge(),"RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
      estimator=LinearRegression(), scoring='neg_mean_squared_error')",164.46286414905308,"OrderedDict({'poly__degree': 5, 'regressor': Ridge(), 'regressor__alpha': 164.46286414905308, 'selector': RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
      estimator=LinearRegression(), scoring='neg_mean_squared_error')})",-1.7245273738983553,-1.3149226348637562,-1.243814960404427,-0.8009644535099706,-0.9720175975076125,-1.2112494040368242,0.31648966064655365,79
2.2136621952056883,0.19077054475289015,0.0032721042633056642,0.0005072586741248154,5,LinearRegression(),"EstimatorWrapper(estimator=Pipeline(steps=[('high_corr',
                                            DropHighlyCorrelated(threshold=0.95)),
                                           ('corr_filter',
                                            DropLowTargetCorrelation(threshold=0.01)),
                                           ('rfe',
                                            RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
                                                  estimator=LinearRegression(),
                                                  scoring='neg_mean_squared_error'))]))",,"OrderedDict({'poly__degree': 5, 'regressor': LinearRegression(), 'selector': EstimatorWrapper(estimator=Pipeline(steps=[('high_corr',
                                            DropHighlyCorrelated(threshold=0.95)),
                                           ('corr_filter',
                                            DropLowTargetCorrelation(threshold=0.01)),
                                           ('rfe',
                                            RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
                                                  estimator=LinearRegression(),
                                                  scoring='neg_mean_squared_error'))]))})",-0.9856037062264866,-0.4422492649414098,-3.5854789930886612,-0.45413557260602117,-0.7733076935751162,-1.2481550460875392,1.1863766265253555,80
2.1203694343566895,0.19129191575156543,0.0047934532165527345,0.001389962153700506,5,LinearRegression(),"EstimatorWrapper(estimator=Pipeline(steps=[('high_corr',
                                            DropHighlyCorrelated(threshold=0.95)),
                                           ('corr_filter',
                                            DropLowTargetCorrelation(threshold=0.01)),
                                           ('rfe',
                                            RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
                                                  estimator=LinearRegression(),
                                                  scoring='neg_mean_squared_error'))]))",,"OrderedDict({'poly__degree': 5, 'regressor': LinearRegression(), 'selector': EstimatorWrapper(estimator=Pipeline(steps=[('high_corr',
                                            DropHighlyCorrelated(threshold=0.95)),
                                           ('corr_filter',
                                            DropLowTargetCorrelation(threshold=0.01)),
                                           ('rfe',
                                            RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
                                                  estimator=LinearRegression(),
                                                  scoring='neg_mean_squared_error'))]))})",-0.9856037062264866,-0.4422492649414098,-3.5854789930886612,-0.45413557260602117,-0.7733076935751162,-1.2481550460875392,1.1863766265253555,80
3.238009214401245,0.19018198520032925,0.004636573791503906,0.0007915934642495429,5,LinearRegression(),"EstimatorWrapper(estimator=Pipeline(steps=[('high_corr',
                                            DropHighlyCorrelated(threshold=0.95)),
                                           ('corr_filter',
                                            DropLowTargetCorrelation(threshold=0.01)),
                                           ('rfe',
                                            RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
                                                  estimator=LinearRegression(),
                                                  scoring='neg_mean_squared_error'))]))",,"OrderedDict({'poly__degree': 5, 'regressor': LinearRegression(), 'selector': EstimatorWrapper(estimator=Pipeline(steps=[('high_corr',
                                            DropHighlyCorrelated(threshold=0.95)),
                                           ('corr_filter',
                                            DropLowTargetCorrelation(threshold=0.01)),
                                           ('rfe',
                                            RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
                                                  estimator=LinearRegression(),
                                                  scoring='neg_mean_squared_error'))]))})",-0.9856037062264866,-0.4422492649414098,-3.5854789930886612,-0.45413557260602117,-0.7733076935751162,-1.2481550460875392,1.1863766265253555,80
67.855628156662,0.6158548499130123,0.0026513099670410155,0.0009570620518580846,5,LinearRegression(),"RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
      estimator=LinearRegression(), scoring='neg_mean_squared_error')",,"OrderedDict({'poly__degree': 5, 'regressor': LinearRegression(), 'selector': RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
      estimator=LinearRegression(), scoring='neg_mean_squared_error')})",-2.0893868900017583,-1.0037735517096007,-1.4450885735868757,-1.5160410075306283,-0.7413314095704724,-1.3591242864798672,0.46330084600990407,83
62.055194187164304,0.47753758709015115,0.002073240280151367,0.0002184797612213632,5,LinearRegression(),"RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
      estimator=LinearRegression(), scoring='neg_mean_squared_error')",,"OrderedDict({'poly__degree': 5, 'regressor': LinearRegression(), 'selector': RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
      estimator=LinearRegression(), scoring='neg_mean_squared_error')})",-2.0893868900017583,-1.0037735517096007,-1.4450885735868757,-1.5160410075306283,-0.7413314095704724,-1.3591242864798672,0.46330084600990407,83
69.36892795562744,2.8054086912581897,0.0033115386962890626,0.0013872370517480877,5,LinearRegression(),"RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
      estimator=LinearRegression(), scoring='neg_mean_squared_error')",,"OrderedDict({'poly__degree': 5, 'regressor': LinearRegression(), 'selector': RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
      estimator=LinearRegression(), scoring='neg_mean_squared_error')})",-2.0893868900017583,-1.0037735517096007,-1.4450885735868757,-1.5160410075306283,-0.7413314095704724,-1.3591242864798672,0.46330084600990407,83
62.039382457733154,0.3515685378737674,0.002096891403198242,0.0003258138313708852,5,LinearRegression(),"RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
      estimator=LinearRegression(), scoring='neg_mean_squared_error')",,"OrderedDict({'poly__degree': 5, 'regressor': LinearRegression(), 'selector': RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
      estimator=LinearRegression(), scoring='neg_mean_squared_error')})",-2.0893868900017583,-1.0037735517096007,-1.4450885735868757,-1.5160410075306283,-0.7413314095704724,-1.3591242864798672,0.46330084600990407,83
465.57646307945254,0.9221941002870159,0.004874324798583985,0.0023915988242092716,6,Ridge(),"RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
      estimator=LinearRegression(), scoring='neg_mean_squared_error')",1000.0,"OrderedDict({'poly__degree': 6, 'regressor': Ridge(), 'regressor__alpha': 1000.0, 'selector': RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
      estimator=LinearRegression(), scoring='neg_mean_squared_error')})",-1.9339950686563137,-1.7988786061627375,-1.1610049254272752,-1.4994940491742073,-1.4431805303856122,-1.567310635961229,0.27319330188360014,87
466.1425247192383,2.4125234251191623,0.0053767204284667965,0.003784379714079423,6,Ridge(),"RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
      estimator=LinearRegression(), scoring='neg_mean_squared_error')",0.001,"OrderedDict({'poly__degree': 6, 'regressor': Ridge(), 'regressor__alpha': 0.001, 'selector': RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
      estimator=LinearRegression(), scoring='neg_mean_squared_error')})",-0.7590065016075922,-0.7114705675583157,-6.415053932436198,-0.7661418003465645,-0.8671981468688235,-1.9037741897634988,2.2562102406545423,88
2.24183669090271,0.1650390875856814,0.003869962692260742,0.0007018146801057331,5,Lasso(max_iter=5000),"EstimatorWrapper(estimator=Pipeline(steps=[('high_corr',
                                            DropHighlyCorrelated(threshold=0.95)),
                                           ('corr_filter',
                                            DropLowTargetCorrelation(threshold=0.01)),
                                           ('rfe',
                                            RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
                                                  estimator=LinearRegression(),
                                                  scoring='neg_mean_squared_error'))]))",0.7809245916830032,"OrderedDict({'poly__degree': 5, 'regressor': Lasso(max_iter=5000), 'regressor__alpha': 0.7809245916830032, 'selector': EstimatorWrapper(estimator=Pipeline(steps=[('high_corr',
                                            DropHighlyCorrelated(threshold=0.95)),
                                           ('corr_filter',
                                            DropLowTargetCorrelation(threshold=0.01)),
                                           ('rfe',
                                            RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
                                                  estimator=LinearRegression(),
                                                  scoring='neg_mean_squared_error'))]))})",-2.7274489271298665,-1.7939216059114285,-1.9388750340749004,-2.06139259062146,-1.9234857187324101,-2.089024775294013,0.3302674491657407,89
0.00446929931640625,0.0009850223081940082,0.0010982513427734374,7.503568671361355e-05,1,Lasso(max_iter=5000),passthrough,10.223109232886621,"OrderedDict({'poly__degree': 1, 'regressor': Lasso(max_iter=5000), 'regressor__alpha': 10.223109232886621, 'selector': 'passthrough'})",-2.7745893468559144,-2.1492454252615283,-2.511130154714998,-2.4893068544117245,-1.9234857187324101,-2.369551499995315,0.2986472720623444,90
0.5000921726226807,0.04280455030265517,0.0023403167724609375,0.000782763423411599,2,Lasso(max_iter=5000),"RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
      estimator=LinearRegression(), scoring='neg_mean_squared_error')",1000.0,"OrderedDict({'poly__degree': 2, 'regressor': Lasso(max_iter=5000), 'regressor__alpha': 1000.0, 'selector': RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
      estimator=LinearRegression(), scoring='neg_mean_squared_error')})",-2.7745893468559144,-2.1492454252615283,-2.511130154714998,-2.4893068544117245,-1.9234857187324101,-2.369551499995315,0.2986472720623444,90
1.1798644542694092,0.07844161476643334,0.003647899627685547,0.0001333219639965122,4,Lasso(max_iter=5000),"EstimatorWrapper(estimator=Pipeline(steps=[('high_corr',
                                            DropHighlyCorrelated(threshold=0.95)),
                                           ('corr_filter',
                                            DropLowTargetCorrelation(threshold=0.01)),
                                           ('rfe',
                                            RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
                                                  estimator=LinearRegression(),
                                                  scoring='neg_mean_squared_error'))]))",925.8740093875931,"OrderedDict({'poly__degree': 4, 'regressor': Lasso(max_iter=5000), 'regressor__alpha': 925.8740093875931, 'selector': EstimatorWrapper(estimator=Pipeline(steps=[('high_corr',
                                            DropHighlyCorrelated(threshold=0.95)),
                                           ('corr_filter',
                                            DropLowTargetCorrelation(threshold=0.01)),
                                           ('rfe',
                                            RFECV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
                                                  estimator=LinearRegression(),
                                                  scoring='neg_mean_squared_error'))]))})",-2.7745893468559144,-2.1492454252615283,-2.511130154714998,-2.4893068544117245,-1.9234857187324101,-2.369551499995315,0.2986472720623444,90
0.04000554084777832,0.001870330648409241,0.004645442962646485,0.0006542029357565804,6,Lasso(max_iter=5000),passthrough,1.2240850700659416,"OrderedDict({'poly__degree': 6, 'regressor': Lasso(max_iter=5000), 'regressor__alpha': 1.2240850700659416, 'selector': 'passthrough'})",-2.7745893468559144,-2.1492454252615283,-2.511130154714998,-2.4893068544117245,-1.9234857187324101,-2.369551499995315,0.2986472720623444,90
0.0832362174987793,0.006239318447886762,0.0027907848358154296,0.0004800204025266948,5,LinearRegression(),passthrough,,"OrderedDict({'poly__degree': 5, 'regressor': LinearRegression(), 'selector': 'passthrough'})",-11.434804899158763,-2.0946194192201766,-4.139808088243714,-1.9550200204977273,-2.937072806819791,-4.512265046788035,3.5475632564189663,94
0.08746247291564942,0.007967660963219048,0.002811622619628906,0.0003157512688462716,5,LinearRegression(),passthrough,,"OrderedDict({'poly__degree': 5, 'regressor': LinearRegression(), 'selector': 'passthrough'})",-11.434804899158763,-2.0946194192201766,-4.139808088243714,-1.9550200204977273,-2.937072806819791,-4.512265046788035,3.5475632564189663,94
0.09358382225036621,0.0025416324359646965,0.0033150196075439455,0.00044715709031831815,5,LinearRegression(),passthrough,,"OrderedDict({'poly__degree': 5, 'regressor': LinearRegression(), 'selector': 'passthrough'})",-11.434804899158763,-2.0946194192201766,-4.139808088243714,-1.9550200204977273,-2.937072806819791,-4.512265046788035,3.5475632564189663,94
0.07246031761169433,0.0036775580982616723,0.0026389598846435548,0.0001967228436730857,5,LinearRegression(),passthrough,,"OrderedDict({'poly__degree': 5, 'regressor': LinearRegression(), 'selector': 'passthrough'})",-11.434804899158763,-2.0946194192201766,-4.139808088243714,-1.9550200204977273,-2.937072806819791,-4.512265046788035,3.5475632564189663,94
0.0795405387878418,0.003533300356747559,0.002477264404296875,7.086393785833223e-05,5,LinearRegression(),passthrough,,"OrderedDict({'poly__degree': 5, 'regressor': LinearRegression(), 'selector': 'passthrough'})",-11.434804899158763,-2.0946194192201766,-4.139808088243714,-1.9550200204977273,-2.937072806819791,-4.512265046788035,3.5475632564189663,94
0.0747382640838623,0.003995602549768425,0.002814960479736328,0.0004219705064259615,5,LinearRegression(),passthrough,,"OrderedDict({'poly__degree': 5, 'regressor': LinearRegression(), 'selector': 'passthrough'})",-11.434804899158763,-2.0946194192201766,-4.139808088243714,-1.9550200204977273,-2.937072806819791,-4.512265046788035,3.5475632564189663,94
0.19753799438476563,0.02748727668865107,0.005042028427124023,0.0010878795114826554,6,LinearRegression(),passthrough,,"OrderedDict({'poly__degree': 6, 'regressor': LinearRegression(), 'selector': 'passthrough'})",-17.5581470526932,-4.514102167870283,-17.575792560861174,-80.24959660615461,-5.726798373268015,-25.124887352169456,28.121409222195734,100
